//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "guild_data")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: u64,
    pub personal_allowed: bool,
    pub manager_role: Option<u64>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::role::Entity")]
    Role,
    #[sea_orm(has_many = "super::sticker::Entity")]
    Sticker,
}

impl Related<super::role::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Role.def()
    }
}

impl Related<super::sticker::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Sticker.def()
    }
}

impl Related<super::sticker_pack::Entity> for Entity {
    fn to() -> RelationDef {
        super::guild_pack_rel::Relation::StickerPack.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::guild_pack_rel::Relation::GuildData.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}

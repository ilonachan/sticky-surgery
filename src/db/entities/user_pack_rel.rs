//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user_pack_rel")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub user_id: u64,
    #[sea_orm(primary_key, auto_increment = false)]
    pub pack_id: u64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::sticker_pack::Entity",
        from = "Column::PackId",
        to = "super::sticker_pack::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    StickerPack,
    #[sea_orm(
        belongs_to = "super::user_data::Entity",
        from = "Column::UserId",
        to = "super::user_data::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    UserData,
}

impl Related<super::sticker_pack::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::StickerPack.def()
    }
}

impl Related<super::user_data::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserData.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
